<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Tech on Jared Szajkowski</title>
        <link>https://jaredszajkowski.github.io/categories/tech/</link>
        <description>Recent content in Tech on Jared Szajkowski</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 29 Sep 2023 00:00:01 +0000</lastBuildDate><atom:link href="https://jaredszajkowski.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Arch Linux Laptop Install</title>
        <link>https://jaredszajkowski.github.io/p/arch-linux-laptop-install/</link>
        <pubDate>Fri, 29 Sep 2023 00:00:01 +0000</pubDate>
        
        <guid>https://jaredszajkowski.github.io/p/arch-linux-laptop-install/</guid>
        <description>&lt;p&gt;This is the basic framework that I use to install Arch Linux, with a few changes catered to the Lenovo ThinkPad E15 Gen 2. I have found that this is a decent mid range laptop, excellent linux compatibility, great keyboard, and overall provides a good value.&lt;/p&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;
&lt;p&gt;This tutorial assumes the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You are booting from a USB drive with the Arch install ISO&lt;/li&gt;
&lt;li&gt;Wireless or wired network is detected and drivers are configured automatically&lt;/li&gt;
&lt;li&gt;You want drive encrytion on your root partition, but not on your boot/efi/swap partitions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;configure-wireless&#34;&gt;Configure Wireless&lt;/h3&gt;
&lt;p&gt;The following command will drop you into the iwd daemon:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# iwctl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From there:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# device list
# station *device* scan
# station *device* get-networks
# station *device* connect *SSID*
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;verify-uefi-boot-mode&#34;&gt;Verify UEFI boot mode&lt;/h3&gt;
&lt;p&gt;The following command should show directory without error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ls /sys/firmware/efi/efivars
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;verify-internet-connectivity&#34;&gt;Verify internet connectivity&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# ping archlinux.org
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;update-system-clock&#34;&gt;Update system clock&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# timedatectl set-ntp true
# timedatectl status
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;prep-disks&#34;&gt;Prep disks&lt;/h2&gt;
&lt;p&gt;The following assumes that your NVME drive is found as /dev/nvme0n1. Partitions will then be /dev/nvme0n1p1 and so on.&lt;/p&gt;
&lt;p&gt;List disks:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# fdisk -l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Wipe all file system records:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# wipefs -a /dev/nvme0n1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;partition-table--partitions&#34;&gt;Partition table &amp;amp; partitions&lt;/h2&gt;
&lt;p&gt;Open nvme0n1 with gdisk:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# gdisk /dev/nvme0n1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create GPT partition table with option &amp;ldquo;o&amp;rdquo;.&lt;/p&gt;
&lt;h3 id=&#34;create-efi-partition&#34;&gt;Create EFI partition&lt;/h3&gt;
&lt;p&gt;Create new EFI partition w/ 550mb with option &amp;ldquo;n&amp;rdquo;, using the following parameters:&lt;/br&gt;
Partition #1 &lt;/br&gt;
Default starting sector&lt;/br&gt;
+550M&lt;/br&gt;
Change partition type to EFI System (ef00)&lt;/br&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-boot-partition&#34;&gt;Create boot partition&lt;/h3&gt;
&lt;p&gt;Create new boot partition w/ 550mb with option &amp;ldquo;n&amp;rdquo;, using the following parameters:&lt;/br&gt;
Partition #2 &lt;/br&gt;
Default starting sector&lt;/br&gt;
+550M&lt;/br&gt;
Leave default type of 8300&lt;/br&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-swap-partition&#34;&gt;Create swap partition&lt;/h3&gt;
&lt;p&gt;The old rule of thumb used to be that a swap partition should be the same size as the amount of memory in the system, but given the typical amount of memory in modern systems this is obviously no longer necessary. For my system with 16 or 32 GB of memory, a swap of 8 GB is rarely even used.&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;Create new Swap partition w/ 8GB with option &amp;ldquo;n&amp;rdquo;, using the following parameters:&lt;/br&gt;
Partition #3&lt;/br&gt;
Default starting sector&lt;/br&gt;
+8G&lt;/br&gt;
Change to linux swap (8200)&lt;/br&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-root-partition&#34;&gt;Create root partition&lt;/h3&gt;
&lt;p&gt;Create new root partition w/ remaining disk space with option &amp;ldquo;n&amp;rdquo;, using the following parameters:&lt;/br&gt;
Partition #4&lt;/br&gt;
Default starting sector&lt;/br&gt;
Complete remaining space&lt;/br&gt;
Linux LUKS type 8309&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;And then exit gdisk.&lt;/p&gt;
&lt;h2 id=&#34;write-file-systems&#34;&gt;Write file systems&lt;/h2&gt;
&lt;h3 id=&#34;efi-partition&#34;&gt;EFI partition&lt;/h3&gt;
&lt;p&gt;Write file system to new EFI System partition:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# cat /dev/zero &amp;gt; /dev/nvme0n1p1 
# mkfs.fat -F32 /dev/nvme0n1p1 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;boot-partition&#34;&gt;Boot partition&lt;/h3&gt;
&lt;p&gt;Then boot partition:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# cat /dev/zero &amp;gt; /dev/nvme0n1p2 
# mkfs.ext2 /dev/nvme0n1p2
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;root-partition&#34;&gt;Root partition&lt;/h3&gt;
&lt;p&gt;Prepare root partition w/ LUKS:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# cryptsetup -y -v luksFormat --type luks2 /dev/nvme0n1p4
# cryptsetup luksDump /dev/nvme0n1p4
# cryptsetup open /dev/nvme0n1p4 archcryptroot
# mkfs.ext4 /dev/mapper/archcryptroot
# mount /dev/mapper/archcryptroot /mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I use &lt;em&gt;archcryptroot&lt;/em&gt; for the name of my encrypted volume, but change as necessary.&lt;/p&gt;
&lt;h3 id=&#34;swap-partition&#34;&gt;Swap partition&lt;/h3&gt;
&lt;p&gt;Then swap:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# mkswap /dev/nvme0n1p3 
# swapon /dev/nvme0n1p3 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;create-mount-points&#34;&gt;Create mount points&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# mkdir /mnt/boot 
# mount /dev/nvme0n1p2 /mnt/boot 
# mkdir /mnt/boot/efi 
# mount /dev/nvme0n1p1 /mnt/boot/efi
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;install-system&#34;&gt;Install system&lt;/h2&gt;
&lt;p&gt;To be continued.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Hello World</title>
        <link>https://jaredszajkowski.github.io/p/hello-world/</link>
        <pubDate>Fri, 29 Sep 2023 00:00:00 +0000</pubDate>
        
        <guid>https://jaredszajkowski.github.io/p/hello-world/</guid>
        <description>&lt;p&gt;Welcome to my website. This is meant to serve as a place for me to publish various posts from my explorations into Arch Linux, data science, quant finance, and other topics.&lt;/p&gt;
&lt;p&gt;The theme has been adopted from the &lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo Theme Stack&lt;/a&gt; produced by Jimmy Cai.&lt;/p&gt;
&lt;p&gt;This is the only theme that I have found that checks all of the following boxes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Theme for the static site generator Hugo&lt;/li&gt;
&lt;li&gt;Includes modules for archives&lt;/li&gt;
&lt;li&gt;Includes tags and topics/categories&lt;/li&gt;
&lt;li&gt;Includes built-in search functionality&lt;/li&gt;
&lt;li&gt;Simple interface that is easily navigable&lt;/li&gt;
&lt;li&gt;Highly extensible including modules for image galleries, posts, comment capabilities, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is hosted on &lt;a class=&#34;link&#34; href=&#34;https://pages.github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub pages&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
